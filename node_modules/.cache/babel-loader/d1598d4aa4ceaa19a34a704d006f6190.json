{"ast":null,"code":"import produce from 'immer'; // https://github.com/immerjs/immer\n\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case '@cart/ADD_SUCCESS':\n      return produce(state, draft => {\n        const {\n          product\n        } = action;\n        draft.push(product);\n      });\n    // return [\n    //     ...state,\n    //     {\n    //         ...action.product,\n    //         amount: 1,\n    //     },\n    // ];\n\n    case '@cart/REMOVE':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n\n    case '@cart/UPDATE_AMOUNT_SUCCESS':\n      {\n        // if (action.amount <= 0) { // this is already being done on the sagas\n        //     return state;\n        // }\n        return produce(state, draft => {\n          const productIndex = draft.findIndex(p => p.id === action.id);\n\n          if (productIndex >= 0) {\n            draft[productIndex].amount = Number(action.amount);\n          }\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ashutoshkumar/soptai-shopping-cart/src/store/modules/cart/reducer.js"],"names":["produce","cart","state","action","type","draft","product","push","productIndex","findIndex","p","id","splice","amount","Number"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB,C,CAA6B;;AAE7B,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAG,EAAtB,EAA0BC,MAA1B,EAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,mBAAL;AACI,aAAOJ,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC3B,cAAM;AAAEC,UAAAA;AAAF,YAAcH,MAApB;AAEAE,QAAAA,KAAK,CAACE,IAAN,CAAWD,OAAX;AACH,OAJa,CAAd;AAKJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAK,cAAL;AACI,aAAON,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC3B,cAAMG,YAAY,GAAGH,KAAK,CAACI,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASR,MAAM,CAACQ,EAArC,CAArB;;AACA,YAAIH,YAAY,IAAI,CAApB,EAAuB;AACnBH,UAAAA,KAAK,CAACO,MAAN,CAAaJ,YAAb,EAA2B,CAA3B;AACH;AACJ,OALa,CAAd;;AAOJ,SAAK,6BAAL;AAAoC;AAChC;AACA;AACA;AAEA,eAAOR,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC3B,gBAAMG,YAAY,GAAGH,KAAK,CAACI,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASR,MAAM,CAACQ,EAArC,CAArB;;AACA,cAAIH,YAAY,IAAI,CAApB,EAAuB;AACnBH,YAAAA,KAAK,CAACG,YAAD,CAAL,CAAoBK,MAApB,GAA6BC,MAAM,CAACX,MAAM,CAACU,MAAR,CAAnC;AACH;AACJ,SALa,CAAd;AAMH;;AAED;AACI,aAAOX,KAAP;AArCR;AAuCH","sourcesContent":["import produce from 'immer'; // https://github.com/immerjs/immer\n\nexport default function cart(state = [], action) {\n    switch (action.type) {\n        case '@cart/ADD_SUCCESS':\n            return produce(state, draft => {\n                const { product } = action;\n\n                draft.push(product);\n            });\n        // return [\n        //     ...state,\n        //     {\n        //         ...action.product,\n        //         amount: 1,\n        //     },\n        // ];\n\n        case '@cart/REMOVE':\n            return produce(state, draft => {\n                const productIndex = draft.findIndex(p => p.id === action.id);\n                if (productIndex >= 0) {\n                    draft.splice(productIndex, 1);\n                }\n            });\n\n        case '@cart/UPDATE_AMOUNT_SUCCESS': {\n            // if (action.amount <= 0) { // this is already being done on the sagas\n            //     return state;\n            // }\n\n            return produce(state, draft => {\n                const productIndex = draft.findIndex(p => p.id === action.id);\n                if (productIndex >= 0) {\n                    draft[productIndex].amount = Number(action.amount);\n                }\n            });\n        }\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}