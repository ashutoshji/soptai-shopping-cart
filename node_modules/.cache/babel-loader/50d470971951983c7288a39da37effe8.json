{"ast":null,"code":"var _jsxFileName = \"/Users/ashutoshkumar/reactjs-redux-sagas/src/pages/Home/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport Img from 'react-cool-img';\nimport api from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { ProductList } from './styles';\nexport default function Home() {\n  const [products, setProducts] = useState([]);\n  const dispatch = useDispatch();\n  const amount = useSelector(state => state.cart.reduce((sumAmount, product) => {\n    sumAmount[product.id] = product.amount;\n    return sumAmount;\n  }, {})); // replacing componentDidMount\n\n  useEffect(() => {\n    // creating another function to be able to use async directive\n    async function loadProducts() {\n      const response = await api.get('products');\n      console.log('response', response);\n      const data = response.data.map(product => ({ ...product,\n        priceFormatted: formatPrice(product.price)\n      })); // and instead of setState, we use setProducts now\n\n      setProducts(data);\n    }\n\n    loadProducts();\n  }, []);\n\n  function handleAddProduct(id) {\n    console.tron.log(id); // here using the bindActionCreators we can use the action directly from the props\n\n    dispatch(CartActions.addToCartRequest(id)); // after adding a product to cart, redux saga navigates to the /cart page. This happens\n    // at the generator addToCart\n    // const { dispatch } = this.props;\n    // dispatch(CartActions.addToCart(product));\n  }\n\n  return React.createElement(ProductList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, products.map(product => React.createElement(\"li\", {\n    key: product.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Img, {\n    src: require(product.image),\n    alt: product.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, product.title), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, product.priceFormatted), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleAddProduct(product.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(MdAddShoppingCart, {\n    size: 16,\n    color: \"#FFF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), ' ', amount[product.id] || 0, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Add to cart\"))))));\n}","map":{"version":3,"sources":["/Users/ashutoshkumar/reactjs-redux-sagas/src/pages/Home/index.js"],"names":["React","useState","useEffect","useSelector","useDispatch","MdAddShoppingCart","Img","api","formatPrice","CartActions","ProductList","Home","products","setProducts","dispatch","amount","state","cart","reduce","sumAmount","product","id","loadProducts","response","get","console","log","data","map","priceFormatted","price","handleAddProduct","tron","addToCartRequest","require","image","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport Img from 'react-cool-img';\nimport api from '../../services/api';\nimport { formatPrice } from '../../util/format';\n\nimport * as CartActions from '../../store/modules/cart/actions';\n\nimport { ProductList } from './styles';\n\nexport default function Home() {\n    const [products, setProducts] = useState([]);\n    const dispatch = useDispatch();\n    const amount = useSelector(state =>\n        state.cart.reduce((sumAmount, product) => {\n            sumAmount[product.id] = product.amount;\n            return sumAmount;\n        }, {})\n    );\n\n    // replacing componentDidMount\n    useEffect(() => {\n        // creating another function to be able to use async directive\n        async function loadProducts() {\n            const response = await api.get('products');\n            console.log('response',response);\n            const data = response.data.map(product => ({\n                ...product,\n                priceFormatted: formatPrice(product.price),\n            }));\n            // and instead of setState, we use setProducts now\n            setProducts(data);\n        }\n\n        loadProducts();\n    }, []);\n\n    function handleAddProduct(id) {\n        console.tron.log(id);\n        // here using the bindActionCreators we can use the action directly from the props\n        dispatch(CartActions.addToCartRequest(id));\n\n        // after adding a product to cart, redux saga navigates to the /cart page. This happens\n        // at the generator addToCart\n\n        // const { dispatch } = this.props;\n        // dispatch(CartActions.addToCart(product));\n    }\n\n    return (\n        <ProductList>\n            {products.map(product => (\n                <li key={product.id}>\n                    <Img src={require(product.image)} alt={product.title} />\n                    <strong>{product.title}</strong>\n                    <span>{product.priceFormatted}</span>\n\n                    <button\n                        type=\"button\"\n                        onClick={() => handleAddProduct(product.id)}\n                    >\n                        <div>\n                            <MdAddShoppingCart size={16} color=\"#FFF\" />{' '}\n                            {amount[product.id] || 0}\n                            <span>Add to cart</span>\n                        </div>\n                    </button>\n                </li>\n            ))}\n        </ProductList>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}